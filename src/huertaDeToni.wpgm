import wollok.game.*
import toni.*
import plantas.*
import pachamama.*

program huertaDeToni {
	game.width(15)
	game.height(15)
	
	// Configuramos una imagen de fondo, que se repite para cada celda del tablero.
	game.ground("tierra.png")
	
	// Agregamos al amigo Toni.
	game.addVisual(toni)
	
	// MOVIMIENTOS
	keyboard.up().onPressDo({toni.moverNorte()})
	keyboard.down().onPressDo({toni.moverSur()})
	keyboard.right().onPressDo({toni.moverEste()})
	keyboard.left().onPressDo({toni.moverOeste()})
	
	// SEMBRAR PLANTAS
	keyboard.m().onPressDo({ 
		const maiz = new Maiz(position = toni.position().rigth(1))
		toni.sembrarMaiz(maiz)
		game.addVisual(maiz)
	})
	
	keyboard.t().onPressDo({
		const trigo = new Trigo(position = toni.position().rigth(1))
		toni.sembrarTrigo(trigo)
		game.addVisual(trigo)
	})
	
	keyboard.o().onPressDo({
		const tomaco = new Tomaco(position = toni.position().rigth(1))
		toni.sembrarTomaco(tomaco)
		game.addVisual(tomaco)
	})
	
	// REGAR UNA Y TODAS LAS PLANTAS (VER TEMA QUE RIEGE CUALQUIERA)
	keyboard.a().onPressDo({
		game.whenCollideDo( toni, { maiz => toni.regarPlanta(maiz) } )
	})
	
	keyboard.r().onPressDo({

	})
	
	// COSECHAR UNA Y TODAS LAS PLANTAS
	keyboard.x().onPressDo({
	
	})
	
	keyboard.c().onPressDo({
		
	})
	
	// VENDER LA COSECHA
	keyboard.v().onPressDo({
	// LA VENTA SE REFLEJA EN MONEDAS DE ORO	
	})
	
	// MOSTRAR EL ESTADO
	keyboard.space().onPressDo({
	// RETORNAR ALGO COMO: 
	game.say(toni, "Tengo 80 monedas y me quedan 3 plantas para vender")
	})
	
	/*
	 * Acá usamos addVisualIn en vez de addVisual, y por esto 
	 * no es necesario que la pachamama conozca su position.
	 */
	game.addVisualIn(pachamama, game.at(0, 13));
	
	/* 
	 * Agregamos una fila de maices. Ojo al regar, que Toni no va a conocer
	 * estas plantas.
	 * 
	 * En este ejemplo también usamos addVisualIn, por lo tanto
	 * el Maiz solo define la imagen.
	 * 
	 * De yapa, mostramos cómo agregar varios objetos de una utilizando
	 * un rango (1..13), que equivale a la lista [1, 2, 3, ..., 13].
	 */
	(1..13).forEach { x => game.addVisualIn(new Maiz(), game.at(x, 5)) }
		
	game.start()
}